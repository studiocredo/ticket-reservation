# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                       @controllers.Application.index


# Login page
GET         /login                                  @controllers.auth.LoginPage.login()
POST        /login                                  @controllers.auth.LoginPage.handleLogin()
GET         /logout                                 @controllers.auth.LoginPage.logout

GET         /not-authorized                         @controllers.auth.Auth.notAuthorized

# User Registration and password handling
GET         /signup                                 @controllers.auth.SignUp.startSignUp
POST        /signup                                 @controllers.auth.SignUp.handleStartSignUp
GET         /signup/emailed                         @controllers.auth.SignUp.signUpAwaitEmail
POST        /signup/force                           @controllers.auth.SignUp.forceHandleStartSignUp(email: String)
GET         /signup/:token                          @controllers.auth.SignUp.signUp(token)
POST        /signup/:token                          @controllers.auth.SignUp.handleSignUp(token:String)
GET         /reset                                  @controllers.auth.PasswordReset.startResetPassword
GET         /activate/:username                     @controllers.auth.PasswordReset.startActivateProfile(username: String)
POST        /reset                                  @controllers.auth.PasswordReset.handleStartResetPassword
POST        /activate/:username                     @controllers.auth.PasswordReset.handleStartActivateProfile(username: String)
GET         /reset/:token/:username                 @controllers.auth.PasswordReset.resetPassword(token:String, username: String)
POST        /reset/:token/:username                 @controllers.auth.PasswordReset.handleResetPassword(token:String, username: String)
GET         /activate/:token/:username              @controllers.auth.PasswordReset.activateProfile(token:String, username: String)
POST        /activate/:token/:username              @controllers.auth.PasswordReset.handleActivateProfile(token:String, username: String)
GET         /password                               @controllers.auth.PasswordChange.page
POST        /password                               @controllers.auth.PasswordChange.handlePasswordChange
GET         /profile                                @controllers.Profile.edit
POST        /profile                                @controllers.Profile.update
GET         /download/:assetId                      @controllers.Downloads.download(assetId: AssetId)


# Admin
GET         /admin/users                            @controllers.admin.Users.list(search:Option[String] ?= None, active:String ?= views.helper.UserActiveOption.default.id, p:Int ?= 0)
GET         /admin/users/new                        @controllers.admin.Users.create
POST        /admin/users                            @controllers.admin.Users.save
GET         /admin/users/sudo/:id                   @controllers.admin.Users.sudo(id:UserId)
GET         /admin/users/:id                        @controllers.admin.Users.edit(id:UserId)
POST        /admin/users/:id                        @controllers.admin.Users.update(id:UserId)
GET         /admin/users/activate/:name             @controllers.admin.Users.activate(name:String)
GET         /admin/user/:id                         @controllers.admin.UserDetails.view(id:UserId, showAll:Boolean ?= false)

GET         /admin/payments                         @controllers.admin.Payments.list(search:Option[String] ?= None, registered:String ?= views.helper.PaymentRegisteredOption.default.id, showAll:Boolean ?= false, p:Int ?= 0)
GET         /admin/payments/new                     @controllers.admin.Payments.create
POST        /admin/payments/upload                  @controllers.admin.Payments.upload
GET         /admin/payments/import                  @controllers.admin.Payments.importCodabox
POST        /admin/payments                         @controllers.admin.Payments.save
GET         /admin/payments/:id                     @controllers.admin.Payments.edit(id:PaymentId)
POST        /admin/payments/:id                     @controllers.admin.Payments.update(id:PaymentId)
POST        /admin/payments/:id/delete              @controllers.admin.Payments.delete(id:PaymentId)
POST        /admin/payments/:id/copy                @controllers.admin.Payments.copy(id:PaymentId)


GET         /admin/orders                           @controllers.admin.Orders.list(search:Option[String] ?= None, paid:String ?= views.helper.OrderPaidOption.default.id, showAll:Boolean ?= false, p:Int ?= 0)
GET         /admin/orders/reloadStatus              @controllers.Orders.reloadStatus()
GET         /admin/orders/:id                       @controllers.admin.Orders.details(id:OrderId)
GET         /admin/orders/show/:show                @controllers.admin.Orders.show(show: ShowId)
GET         /admin/orders/availability/:id          @controllers.admin.Orders.ajaxFloorplan(id:ShowId)
GET         /admin/orders/edit/:id                  @controllers.admin.Orders.edit(id:OrderId)
POST        /admin/orders/edit/:id                  @controllers.admin.Orders.update(id:OrderId)
POST        /admin/orders/confirm/:id               @controllers.admin.Orders.confirm(id: OrderId)
POST        /admin/orders/cancel/:id                @controllers.admin.Orders.cancel(id: OrderId)
POST        /admin/orders/ticket/create/:id         @controllers.admin.Orders.sendAndCreateTicket(id: OrderId)
POST        /admin/orders/ticket/new                @controllers.admin.Orders.sendAndCreateNewTickets()
GET         /admin/orders/ticket/:id                @controllers.admin.Orders.showTicket(id:OrderId)

GET         /admin/prereservations                  @controllers.admin.Prereservations.list(search:Option[String] ?= None, showAll:Boolean ?= false, p:Int ?= 0)

GET         /admin/venues                           @controllers.admin.Venues.list(p:Int ?= 0)
GET         /admin/venues/new                       @controllers.admin.Venues.create
POST        /admin/venues                           @controllers.admin.Venues.save
GET         /admin/venues/:id                       @controllers.admin.Venues.edit(id:VenueId)
POST        /admin/venues/:id                       @controllers.admin.Venues.update(id:VenueId)
POST        /admin/venues/:id/delete                @controllers.admin.Venues.delete(id:VenueId)

GET         /admin/floorplan/:id                    @controllers.admin.Floorplans.view(id:VenueId)
GET         /admin/ajax/floorplan/:id               @controllers.admin.Floorplans.ajaxFloorPlan(id:VenueId)
POST        /admin/ajax/floorplan/:id               @controllers.admin.Floorplans.ajaxSaveFloorPlan(id: VenueId)

GET         /admin/events                           @controllers.admin.Events.list(p:Int ?= 0)
GET         /admin/events/new                       @controllers.admin.Events.create
POST        /admin/events                           @controllers.admin.Events.save
GET         /admin/events/:id                       @controllers.admin.Events.edit(id:EventId)
POST        /admin/events/:id                       @controllers.admin.Events.update(id:EventId)
POST        /admin/events/:id/delete                @controllers.admin.Events.delete(id:EventId)

GET         /admin/event/:id                        @controllers.admin.EventDetails.view(id:EventId)
POST        /admin/event/:id/show                   @controllers.admin.EventDetails.addShow(id:EventId)
GET         /admin/event/:id/show/:show             @controllers.admin.EventDetails.editShow(id:EventId, show:ShowId)
POST        /admin/event/:id/show/:show             @controllers.admin.EventDetails.updateShow(id:EventId, show:ShowId)
POST        /admin/event/:id/show/:show/delete      @controllers.admin.EventDetails.deleteShow(id:EventId, show:ShowId)
POST        /admin/event/:id/asset                  @controllers.admin.EventDetails.addAsset(id:EventId)
GET         /admin/event/:id/asset/:asset           @controllers.admin.EventDetails.editAsset(id:EventId, asset:AssetId)
POST        /admin/event/:id/asset/:asset           @controllers.admin.EventDetails.updateAsset(id:EventId, asset:AssetId)
POST        /admin/event/:id/asset/:asset/delete    @controllers.admin.EventDetails.deleteAsset(id:EventId, asset:AssetId)

GET         /orders/                                @controllers.Orders.listActive()
GET         /order/start/:id                        @controllers.Orders.start(id:EventId)
GET         /order/:order/event/:event              @controllers.Orders.view(order:OrderId, event:EventId)
POST        /order/:order/event/:event              @controllers.Orders.confirm(order:OrderId, event:EventId)
GET         /order/:id/cancel                       @controllers.Orders.cancel(id:OrderId)
GET         /order/:id/overview                     @controllers.Orders.overview(id:OrderId)
POST        /order/:order/event/:event/updateBillingData @controllers.Orders.updateBillingData(order:OrderId, event:EventId)
GET         /order/ticket/:reference                @controllers.Orders.ticketDetails(reference:String)

POST        /order/:order/event/:event/show/:id     @controllers.Orders.startSeatOrder(id:ShowId, order: OrderId, event: EventId)
GET         /order/:order/show/:id                  @controllers.Orders.viewSeatOrder(id:ShowId, order: OrderId)
GET         /order/:order/show/:id/commit           @controllers.Orders.commitSeatOrder(id:ShowId, order: OrderId)
GET         /order/:order/show/:id/cancel           @controllers.Orders.cancelSeatOrder(id:ShowId, order: OrderId)

GET         /order/:order/event/:event/ticket/:ticket/cancel @controllers.Orders.cancelTicketOrder(order: OrderId, event: EventId, ticket:TicketOrderId)
POST        /order/:order/show/:id/floorplan        @controllers.Orders.ajaxFloorplan(id:ShowId, order: OrderId)
POST        /order/:order/show/:id/move             @controllers.Orders.ajaxMove(id:ShowId, order: OrderId)
POST        /order/:order/show/:id/moveBest         @controllers.Orders.ajaxMoveBest(id:ShowId, order: OrderId)

GET         /preorder/:id                           @controllers.Prereservations.start(id:EventId)
POST        /preorder/:id                           @controllers.Prereservations.save(id:EventId)

GET         /events/                                @controllers.Events.list(p:Int ?= 0)
GET         /events/:event                          @controllers.Events.view(event:EventId)
GET         /events/:event/show/:show               @controllers.Events.viewShow(event:EventId, show:ShowId)
GET         /events/floorplan/:id                   @controllers.Events.ajaxFloorplan(id:VenueId)
GET         /events/availability/:id                @controllers.Events.ajaxAvailabilityFloorplan(id:ShowId)

# Assets
GET         /assets/javascripts/routes              @controllers.Application.javascriptRoutes
GET         /assets/*file                           controllers.Assets.at(path="/public", file)
GET         /webjars/*file                          controllers.WebJarAssets.at(file)
